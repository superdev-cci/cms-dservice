# Generated by Django 2.1.3 on 2019-01-03 12:42

from django.db import migrations
from django.db.models import Count


def link_statement(apps, schema_editor):
    PvTransfer = apps.get_model('commission', 'PvTransfer')
    Member = apps.get_model('member', 'Member')
    allInv = PvTransfer.objects.values('mcode').annotate(memberid=Count('mcode')).order_by('-memberid')
    pool = [i['mcode'] for i in allInv]
    member = {x.mcode: x.id for x in Member.objects.filter(mcode__in=pool)}
    for k, v in member.items():
        print('Update : {}'.format(k))
        PvTransfer.objects.filter(mcode=k).update(member_id=v)
    return


def week_commission_statement(apps, schema_editor):
    WeekCommission = apps.get_model('commission', 'WeekCommission')
    Member = apps.get_model('member', 'Member')
    allInv = WeekCommission.objects.values('mcode').annotate(memberid=Count('mcode')).order_by('-memberid')
    pool = [i['mcode'] for i in allInv]
    member = {x.mcode: x.id for x in Member.objects.filter(mcode__in=pool)}
    for k, v in member.items():
        print('Update : {}'.format(k))
        WeekCommission.objects.filter(mcode=k).update(member_id=v)
    return


def weak_strong_statement(apps, schema_editor):
    WeakStrongSummary = apps.get_model('commission', 'WeakStrongSummary')
    Member = apps.get_model('member', 'Member')
    allInv = WeakStrongSummary.objects.values('mcode').annotate(memberid=Count('mcode')).order_by('-memberid')
    pool = [i['mcode'] for i in allInv]
    member = {x.mcode: x.id for x in Member.objects.filter(mcode__in=pool)}
    for k, v in member.items():
        print('Update : {}'.format(k))
        WeakStrongSummary.objects.filter(mcode=k).update(member_id=v)
    return


class Migration(migrations.Migration):
    dependencies = [
        ('commission', '0003_auto_20181225_1117'),
    ]

    operations = [
        migrations.RunPython(link_statement),
        migrations.RunPython(week_commission_statement),
        migrations.RunPython(weak_strong_statement),
    ]
